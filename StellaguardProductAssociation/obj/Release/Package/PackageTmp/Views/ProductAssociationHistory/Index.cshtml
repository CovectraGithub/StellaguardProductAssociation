@model  StellaguardProductAssociation.Models.ProductAssociationHistoryModels
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}



    @helper SupplierNameLink(byte supplierId, string supplierName)
        {
if (true)
{
        @Html.ActionLink(@supplierName, "Edit", "SupplierChain", new { supplierId = @supplierId }, new { title = "Edit" + " " + supplierName, primarykey = supplierId });
    }
    else
    {
        @Html.ActionLink(@supplierName, "Edit", "SupplierChain", new { supplierId = @supplierId }, new { @class = "link-disabled" });
    }
}
    @helper SupplierAddressLink(string Address1, short addressId, byte SupplierId)
    {
if (addressId != null && Address1 != null && SupplierId != null)
{
    if (true)
    {
            @Html.ActionLink(Address1, "Index", "SerialNumberHistory", new { serialnumber = SupplierId, id = addressId }, new { title = "Click_to_edit_address" });
    }
    else
    {
            @Html.ActionLink(Address1, "Index", "SerialNumberHistory", new { supplierId = SupplierId, addressId = addressId }, new { @class = "link-disabled" });
        }
    }
}

    <div id="product-list-div">
@using (Html.BeginForm("Index", "ProductAssociationHistory", FormMethod.Get, new
{
    id = "frmSearch",
    name = "frmsearch",
    @class = "form-horizontal",
    style
                        = "margin: 8px!important;"
}))
{

        <div id="product-list-form">
            <div class="form-horizontal" style="margin-bottom:0px;margin:5px!important;margin: 2px!important;">
                <fieldset>
                    <br />
                    <div class="panel panel-primary form-horizontal" style="margin-bottom:0px;">
                        <div class="panel-heading" data-toggle="collapse" data-target="#filter" style="min-height:45px!important;">
                            <h3 class="panel-title">
                                Select Filter Criteria
                                <a id="collapseTrigger" href="#" class="collapseTrigger btn btn-xs pull-right glyphicon glyphicon-plus"></a>
                            </h3>
                        </div>
                        <div id="filter" class="panel-body collapse">
                            <div class="form-group">
                                @*@Html.Label(@Index.ProductFilter_ProductName_Display_Name, new { @class = "col-xs-12 col-sm-2 control-label" })*@
                                <label class="col-sm-2 col-xs-12 control-label " for="FilterParameters_UserBatchNumber">Serial Number #</label>
                                <div class="col-xs-12 col-sm-4">
                                    @*@Html.TextBoxFor(model => model.FilterParameters.FilterProductName, new { @class = "form-control", @placeholder = AuthentiTrack.I18NResources.Serialization.Product.Index.ProductFilter_ProductName_Display_Name })*@
                                    <input class="form-control" data-val="true" data-val-length="Batch Number should not exceed 100 characters." data-val-length-max="100" id="FilterParameters_UserBatchNumber" name="FilterParameters.UserBatchNumber" type="text" value="">
                                </div>
                                <label class="col-sm-2 col-xs-12 control-label " for="FilterParameters_ProductName">Product UPC</label>
                                <div class="col-xs-12 col-sm-4">
                                    <input class="form-control" data-val="true" data-val-length="Product Name should not exceed 100 characters." data-val-length-max="100" id="FilterParameters_ProductName" name="FilterParameters.ProductName" type="text" value="">
                                </div>
                                @*<div class="form-group">*@

                                @*</div>*@
                            </div>
                            <div class="form-group">

                                <label class="col-xs-12 col-sm-2 control-label text-right">
                                    Users
                                </label>
                                <div class="col-xs-12 col-sm-4">
                                    <div>
                                        <div class="selectBox" onclick="showCheckboxes()">
                                            <select class="form-control valid">
                                                <option>Select Users</option>
                                            </select>
                                            <div class="overSelect"></div>
                                        </div>
                                        <div id="checkboxes">
                                            <label for="one">
                                                <input type="checkbox" id="one" /> CovectraSupport
                                            </label>
                                            <label for="two">
                                                <input type="checkbox" id="two" /> Abhandari
                                            </label>
                                            <label for="three">
                                                <input type="checkbox" id="three" /> Aprisauser
                                            </label>
                                        </div>
                                    </div>
                                </div>

                                <label class="col-xs-12 col-sm-2 control-label text-right">
                                    Work Order No.
                                </label>
                                <div class="col-xs-12 col-sm-4">

                                    <input class="form-control" data-val="true" data-val-length="Product Name should not exceed 100 characters." data-val-length-max="100" id="FilterParameters_ProductName" name="FilterParameters.ProductName" type="text" value="">

                                </div>
                            </div>

                            <div class="form-group">
                                <label class="col-xs-12 col-sm-2 control-label">
                                    Date
                                </label>
                                <div class="col-xs-12 col-sm-2">
                                    <input class="form-control date" data-val="true" data-val-date="The field MFGDateFrom must be a date." id="FilterParameters_MFGDateFrom" name="FilterParameters.MFGDateFrom" placeholder="From" type="text" value="">
                                </div>
                                <div class="col-xs-12 col-sm-2">
                                    <input class="form-control date" data-val="true" data-val-date="The field MFGDateTo must be a date." id="FilterParameters_MFGDateTo" name="FilterParameters.MFGDateTo" placeholder="To" type="text" value="">
                                </div>

                                <div class="col-sm-offset-2 col-sm-4">
                                    <div class="col-sm-6">
                                        <button type="submit" class="btn btn-primary" formmethod="get">
                                            Search
                                        </button>
                                    </div>
                                    <div class="col-sm-6">
                                        <button type="reset" class="btn btn-primary">
                                            Reset
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <br />
                    <br />


                </fieldset>
            </div>
        </div>


}

        <div class="panel-body collapse in" id="volume-details-grid">
            <div id="divGrid">
                @if (Model != null)
                {
                    <div>
                        @if (Model.WorkOrderList.Count() != 0)
                        {

                            <div class="grid-container" id="TableGrid">
                                @{
                                    var grid = new WebGrid(Model.WorkOrderList, canPage: true, canSort: true, rowsPerPage: 10, defaultSort: "SupplierName");
                                    var currentPageIndex = grid.PageIndex;
                                    var rowsPerPage = grid.RowsPerPage;

                                }

                                @grid.GetHtml(tableStyle: "table table-striped table-hover custom-grid numbered-grid",
                                headerStyle: "webgrid-header",
                                selectedRowStyle: "info",
                                htmlAttributes: new { id = "MainTable" },
                                columns: grid.Columns(
                                grid.Column("", style: "text-right col-sm-1 width-1_3", header: "#", format: item => ((currentPageIndex * rowsPerPage) + (item.WebGrid.Rows.IndexOf(item)) + 1)),
                                grid.Column("TimeStamp", style: "col-sm-4 col-xs-4 col-merge", header: "Time Stamp", format: (item) => SupplierNameLink(item.Id, item.timestamp)),
                                grid.Column("WorkOrder", header: "Work Order No.", style: "col-sm-4 col-xs-4 col-merge"),
                                grid.Column("User", header: "User", style: "col-sm-4 col-xs-4 col-merge"),

                                 grid.Column(format: (item) =>
                                 {
                                     WebGrid subGrid = new WebGrid(source: item.ScannedBarcodeList, canPage: false, canSort: false);
                                     return subGrid.GetHtml(
                                         tableStyle: "table sub-grid padding-10",
                                         htmlAttributes: new { id = "SubTable" },
                                         columns: new[]{
            grid.Column("", header: "#",style:"col-sm-1 col-xs-1 col-lg-1 width-1_3 custom-td text-right",format: item1 =>item1.WebGrid.Rows.IndexOf(item1) + 1),

            grid.Column("SerialNumber", header: "Serial Number",style:"co-sm-3 col-xs-3 col-lg-3 custom-td",format: (item1)=> SupplierAddressLink(item1.SerialNumber,item1.AssociationId,item1.Id)),
            grid.Column("UPC",style:"col-sm-2 col-xs-2 col-lg-2 custom-td", header: "UPC"),
            grid.Column("ProductName", header: "Product Name",style:"col-sm-1 col-xs-1 col-lg-1 custom-td"),


                                         }
                                         );
                                 })
                                )
                                    )

                                @{
                                    if (!string.IsNullOrWhiteSpace(grid.SortColumn))
                                    {
                                        <script type="text/javascript">
                                                $('thead > tr > th > a[href*="sort=@grid.SortColumn"]').parent().append('@(grid.SortDirection == SortDirection.Ascending ? "▲" : "▼")');
                                        </script>
                                    }
                                }
                            </div>


                                    }
                    </div>

                    <br />
                        <br />
                        <br />
                                    }
                                    else
                                    {
                                        <text>NORECORDFOUND</text>
                                    }
            </div>


            @*</div>*@
        </div>







    </div>

                                    

@section scripts {

    <script type="text/javascript">
                                                @*$(document).ready(function () {
                                                    if (true) {
                                                        var message = "Model.POP up Message";
                                                        if (message != '') {
                                                            $('#myModal').modal('show');
                                                        }
                                                        $(".closePopup").click(function () {
                                                            $("#myModal").hide();
                                                            if (true) {
                                                                var url = '@Url.Action("Index", "ProductAssociationHistory")';
                                                                window.location.href = url;
                                                            }
                                                        });
                                                    }
                                                    //MergeGridColumn();

                                                    $('#divGrid:visible').css("max-width", (screen.width - 75) + "px")
                                                    $('#divGrid:visible').css("overflow-x", "auto");
                                                });*@

            function MergeGridColumn() {
                var gridrows = $("#divGrid table.table tbody tr");
                var rowcount = gridrows.length;
                if (gridrows.length > 0) {
                    for (i = 0; i < gridrows.length; i++) {
                        var CurrnetRowKeyId = $(gridrows[i]).find("td a").attr("primarykey");
                        var rowspan = 1;
                        if (i + 1 < gridrows.length) {
                            for (j = i + 1; j < gridrows.length; j++) {
                                var NextRowKeyId = $(gridrows[j]).find("td a").attr("primarykey");
                                if (NextRowKeyId == CurrnetRowKeyId) {
                                    $(gridrows[j]).find("td.col-merge").hide();
                                    rowspan++;
                                }
                            }
                            if (rowcount > 1) {
                                $(gridrows[i]).find("td.col-merge").attr("rowspan", rowspan);
                            }
                        }
                    }
                }
            }

            $(document).ready(function () {
                var size = $("#TableGrid #MainTable > thead > tr >th").size(); // get total column
                $("#TableGrid #MainTable > thead > tr >th").last().remove(); // remove last column
                $("#TableGrid #MainTable > thead > tr").prepend($("<th></th>").addClass("col-sm-1 width-1_3")); // add one column at first for collapsible column
                $("#TableGrid #MainTable > tbody > tr").each(function (i, el) {
                    $(this).prepend(
                            $("<td></td>")
                            .addClass("subtable-expand col-sm-1 width-1_3")
                            .addClass("hoverEff")
                            .attr('title', "click for show/hide address")
                        );

                    //Now get sub table from last column and add this to the next new added row
                    var table = $("table", this).parent().html();
                    //add new row with this subtable
                    $(this).after("<tr><td style='padding:15px; margin:0px;' colspan='" + (size) + "'>" + table + "</td></tr>");
                    $("table", this).parent().remove();
                    // ADD CLICK EVENT FOR MAKE COLLAPSIBLE
                    $(".hoverEff", this).on("click", function () {
                        $(this).parent().closest("tr").next().slideToggle(100);
                        $(this).toggleClass("subtable-expand subtable-collapse");
                    });
                });

                //by default make all subgrid in collapse mode
                $("#TableGrid #MainTable > tbody > tr td.subtable-expand").each(function (i, el) {
                    $(this).toggleClass("subtable-expand subtable-collapse");
                    $(this).parent().closest("tr").next().slideToggle(100);
                });
                $('.btn-delete').unbind('click').bind('click', function () {

                    var confirmDelete = confirm('@Html.Raw("Delete_Confirm")');

                    return confirmDelete;
                });
            });

            $('#Keyword').keypress(function (e) {
                var code = (e.keyCode ? e.keyCode : e.which);
                if (code == 13) {
                    $("#frmSearch").submit();
                }
            });
            var expanded = false;
            function showCheckboxes() {
                var checkboxes = document.getElementById("checkboxes");
                if (!expanded) {
                    checkboxes.style.display = "block";
                    expanded = true;
                } else {
                    checkboxes.style.display = "none";
                    expanded = false;
                }
            }

    </script>


    <script type="text/javascript">
        $(document).ready(function () {

            $(".filter").removeClass("panel-body in");
            $(".filter").addClass("panel-body collapse");

            // Change collapse/expand button icon on collapse/expand events
            $(".panel-body").on('shown.bs.collapse', function () {
                $(this).parent().find('.collapseTrigger').removeClass('glyphicon-plus');
                $(this).parent().find('.collapseTrigger').addClass('glyphicon-minus');
            });
            $(".panel-body").on('hidden.bs.collapse', function () {
                $(this).parent().find('.collapseTrigger').removeClass('glyphicon-minus');
                $(this).parent().find('.collapseTrigger').addClass('glyphicon-plus');
            });

            //if ($("#volume-details-grid").val() != null) {
            //    $('#filter').collapse('hide');
            //}

            if (true) {
                var message = 'Message';
                if (message != '') {
                    $("#myCustomSummary").html($(".validsummary").html()); //Added for passing in partial view
                    $(".validsummary").hide(); //Added for clear from screen RJ
                    $('#myModal').modal('show');
                }
                $(".closePopup").click(function () {
                    $("#myModal").hide();
                    if (true) {
                        var url = '@Url.Action("Index", "Product")';
                        window.location.href = url;
                    }
                });
            }

            $('#divGrid:visible').css("max-width", (screen.width - 75) + "px")
            $('#divGrid:visible').css("overflow-x", "auto")

            $('.btn-delete').unbind('click').bind('click', function () {
                var confirmDelete = confirm('Message');
                return confirmDelete;
            });

            $('#product-list-form button[type="reset"]').click(function () {
                //$('#batch-list-form input[type="radio"]:checked').removeAttr("checked");
                //$('#batch-list-form input[type="radio"][value=""]').attr("checked", "checked");
                //$('#batch-list-form input[type="text"]').val('');
                var url = '@Url.Action("Index", "Product", new {Type = "Reset"})';
                window.location.href = url;
            });
            //$('#filter-form button[type="submit"]').click(function () {
            //    debugger;

            $('#search').click(function () {
                var productName = $('#FilterParameters_FilterProductName').val();
                var productNDC = $('#FilterParameters_FilterProductNDC').val();
                var productBrandOwner = $('#FilterParameters_FilterProductBrandOwner').val();
                if (productName == "" && productNDC == "" && productBrandOwner == "") {
                    $('.customsummary').text('');
                    $('.customsummary').append("Please enter atleast one of the search criteria!");
                    $('#myModal').modal('show');
                    return false;
                }

                $('.btn-delete').unbind('click').bind('click', function () {
                    var confirmDelete = confirm('DELETE_PRODUCT_CONFIRM)');
                    return confirmDelete;
                });
            });

            $('#filter-form button[type="submit"]').click(function () {
                if (!$("#filter-form").valid()) {
                    $(".validsummary").show();
                    $("#myCustomSummary").html($(".validsummary").html()); //Added for passing in partial view
                    $(".validsummary").hide(); //Added for clear from screen RJ
                    $(".customsummary").hide();
                    $('#myModal').modal('show');
                    $('#myModal button:nth-child(1)').focus();
                    return false;
                }
            });
        });
    </script>






}